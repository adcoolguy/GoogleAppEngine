/**
 *ServiceManagerLib
 *
 * This file was automatically generated by APIMATIC BETA v2.0 on 12/18/2015
 */
/**
 * Creates a instance of ServiceRegistry
 *
 * @constructor
 */
function ServiceRegistry() {
    this.id = null;     
    this.lastUpdated = null;     
    this.lastAccessed = null;     
    this.category = null;     
    this.service = null;     
    this.owner = null;     
    this.project = null;     
    this.organization = null;     
    this.endpoint = null;     
    this.summary = null;     
    this.shortUrl = null;     
    this.number = null;     
    this.hit = null;     
    this.description = null;     
    this.disabled  = false;     
    this.useDescription  = false;     
    this.useHtml  = false;     
    this.saveOnly  = false;     
    this.oid = null;     
}

ServiceRegistry.prototype = new BaseModel();
ServiceRegistry.prototype.constructor = BaseModel;

/**
 * TODO: Write general description for this method
 *
 * @return {int|null}
 */
ServiceRegistry.prototype.getId = function() {
    return this.id;
};

/**
 * Setter for Id
 * 
 * @param {int|null} value 
 */
ServiceRegistry.prototype.setId = function(value) {
    this.id = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {DateTime|null}
 */
ServiceRegistry.prototype.getLastUpdated = function() {
    return this.lastUpdated;
};

/**
 * Setter for LastUpdated
 * 
 * @param {DateTime|null} value 
 */
ServiceRegistry.prototype.setLastUpdated = function(value) {
    this.lastUpdated = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {DateTime|null}
 */
ServiceRegistry.prototype.getLastAccessed = function() {
    return this.lastAccessed;
};

/**
 * Setter for LastAccessed
 * 
 * @param {DateTime|null} value 
 */
ServiceRegistry.prototype.setLastAccessed = function(value) {
    this.lastAccessed = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {CategoryEnum|null}
 */
ServiceRegistry.prototype.getCategory = function() {
    return this.category;
};

/**
 * Setter for Category
 * 
 * @param {CategoryEnum|null} value 
 */
ServiceRegistry.prototype.setCategory = function(value) {
    this.category = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {string|null}
 */
ServiceRegistry.prototype.getService = function() {
    return this.service;
};

/**
 * Setter for Service
 * 
 * @param {string|null} value 
 */
ServiceRegistry.prototype.setService = function(value) {
    this.service = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {string|null}
 */
ServiceRegistry.prototype.getOwner = function() {
    return this.owner;
};

/**
 * Setter for Owner
 * 
 * @param {string|null} value 
 */
ServiceRegistry.prototype.setOwner = function(value) {
    this.owner = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {string|null}
 */
ServiceRegistry.prototype.getProject = function() {
    return this.project;
};

/**
 * Setter for Project
 * 
 * @param {string|null} value 
 */
ServiceRegistry.prototype.setProject = function(value) {
    this.project = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {string|null}
 */
ServiceRegistry.prototype.getOrganization = function() {
    return this.organization;
};

/**
 * Setter for Organization
 * 
 * @param {string|null} value 
 */
ServiceRegistry.prototype.setOrganization = function(value) {
    this.organization = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {string|null}
 */
ServiceRegistry.prototype.getEndpoint = function() {
    return this.endpoint;
};

/**
 * Setter for Endpoint
 * 
 * @param {string|null} value 
 */
ServiceRegistry.prototype.setEndpoint = function(value) {
    this.endpoint = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {string|null}
 */
ServiceRegistry.prototype.getSummary = function() {
    return this.summary;
};

/**
 * Setter for Summary
 * 
 * @param {string|null} value 
 */
ServiceRegistry.prototype.setSummary = function(value) {
    this.summary = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {string|null}
 */
ServiceRegistry.prototype.getShortUrl = function() {
    return this.shortUrl;
};

/**
 * Setter for ShortUrl
 * 
 * @param {string|null} value 
 */
ServiceRegistry.prototype.setShortUrl = function(value) {
    this.shortUrl = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {int|null}
 */
ServiceRegistry.prototype.getNumber = function() {
    return this.number;
};

/**
 * Setter for Number
 * 
 * @param {int|null} value 
 */
ServiceRegistry.prototype.setNumber = function(value) {
    this.number = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {int|null}
 */
ServiceRegistry.prototype.getHit = function() {
    return this.hit;
};

/**
 * Setter for Hit
 * 
 * @param {int|null} value 
 */
ServiceRegistry.prototype.setHit = function(value) {
    this.hit = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {string|null}
 */
ServiceRegistry.prototype.getDescription = function() {
    return this.description;
};

/**
 * Setter for Description
 * 
 * @param {string|null} value 
 */
ServiceRegistry.prototype.setDescription = function(value) {
    this.description = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {bool|null}
 */
ServiceRegistry.prototype.getDisabled = function() {
    return this.disabled;
};

/**
 * Setter for Disabled
 * 
 * @param {bool|null} value 
 */
ServiceRegistry.prototype.setDisabled = function(value) {
    this.disabled = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {bool|null}
 */
ServiceRegistry.prototype.getUseDescription = function() {
    return this.useDescription;
};

/**
 * Setter for UseDescription
 * 
 * @param {bool|null} value 
 */
ServiceRegistry.prototype.setUseDescription = function(value) {
    this.useDescription = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {bool|null}
 */
ServiceRegistry.prototype.getUseHtml = function() {
    return this.useHtml;
};

/**
 * Setter for UseHtml
 * 
 * @param {bool|null} value 
 */
ServiceRegistry.prototype.setUseHtml = function(value) {
    this.useHtml = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {bool|null}
 */
ServiceRegistry.prototype.getSaveOnly = function() {
    return this.saveOnly;
};

/**
 * Setter for SaveOnly
 * 
 * @param {bool|null} value 
 */
ServiceRegistry.prototype.setSaveOnly = function(value) {
    this.saveOnly = value;
};

/**
 * TODO: Write general description for this method
 *
 * @return {string|null}
 */
ServiceRegistry.prototype.getOid = function() {
    return this.oid;
};

/**
 * Setter for Oid
 * 
 * @param {string|null} value 
 */
ServiceRegistry.prototype.setOid = function(value) {
    this.oid = value;
};





